{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar arrayKeyMapToObject = function arrayKeyMapToObject(input) {\n  var output = {};\n  input.forEach(function (item) {\n    openObject(item, output);\n\n    function openObject(objectToOpen, setOpenObjectTo) {\n      if (!objectToOpen) {\n        return;\n      }\n\n      Object.keys(objectToOpen).map(function (key) {\n        if (key === undefined) {\n          return;\n        } else if (_typeof(setOpenObjectTo[key]) === \"object\") {\n          openObject(objectToOpen[key], setOpenObjectTo[key]);\n        } else {\n          setOpenObjectTo[key] = objectToOpen[key];\n        }\n      });\n    }\n  });\n  return output;\n};\n\nvar _default = arrayKeyMapToObject;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/react/google-docs-clone-main/client/node_modules/atomize/dist/style-functions/arrayKeyMapToObject.js"],"names":["Object","defineProperty","exports","value","_typeof","obj","Symbol","iterator","constructor","prototype","arrayKeyMapToObject","input","output","forEach","item","openObject","objectToOpen","setOpenObjectTo","keys","map","key","undefined","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,SAASE,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,IAAIK,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAC5D,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC5BC,IAAAA,UAAU,CAACD,IAAD,EAAOF,MAAP,CAAV;;AAEA,aAASG,UAAT,CAAoBC,YAApB,EAAkCC,eAAlC,EAAmD;AACjD,UAAI,CAACD,YAAL,EAAmB;AACjB;AACD;;AAEDhB,MAAAA,MAAM,CAACkB,IAAP,CAAYF,YAAZ,EAA0BG,GAA1B,CAA8B,UAAUC,GAAV,EAAe;AAC3C,YAAIA,GAAG,KAAKC,SAAZ,EAAuB;AACrB;AACD,SAFD,MAEO,IAAIjB,OAAO,CAACa,eAAe,CAACG,GAAD,CAAhB,CAAP,KAAkC,QAAtC,EAAgD;AACrDL,UAAAA,UAAU,CAACC,YAAY,CAACI,GAAD,CAAb,EAAoBH,eAAe,CAACG,GAAD,CAAnC,CAAV;AACD,SAFM,MAEA;AACLH,UAAAA,eAAe,CAACG,GAAD,CAAf,GAAuBJ,YAAY,CAACI,GAAD,CAAnC;AACD;AACF,OARD;AASD;AACF,GAlBD;AAmBA,SAAOR,MAAP;AACD,CAtBD;;AAwBA,IAAIU,QAAQ,GAAGZ,mBAAf;AACAR,OAAO,CAAC,SAAD,CAAP,GAAqBoB,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar arrayKeyMapToObject = function arrayKeyMapToObject(input) {\n  var output = {};\n  input.forEach(function (item) {\n    openObject(item, output);\n\n    function openObject(objectToOpen, setOpenObjectTo) {\n      if (!objectToOpen) {\n        return;\n      }\n\n      Object.keys(objectToOpen).map(function (key) {\n        if (key === undefined) {\n          return;\n        } else if (_typeof(setOpenObjectTo[key]) === \"object\") {\n          openObject(objectToOpen[key], setOpenObjectTo[key]);\n        } else {\n          setOpenObjectTo[key] = objectToOpen[key];\n        }\n      });\n    }\n  });\n  return output;\n};\n\nvar _default = arrayKeyMapToObject;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}