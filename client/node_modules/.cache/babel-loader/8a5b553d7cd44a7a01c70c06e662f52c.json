{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport React from \"react\";\nimport { classSelectors } from \"../utils/selectors\";\nimport { ContentEditable } from \"./ContentEditable\";\n\nvar Tag = function (_super) {\n  __extends(Tag, _super);\n\n  function Tag() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.innerEditableRef = React.createRef();\n\n    _this.remove = function () {\n      return _this.props.remove(_this.props.index);\n    };\n\n    return _this;\n  }\n\n  Tag.prototype.render = function () {\n    var _a = this.props,\n        value = _a.value,\n        index = _a.index,\n        editable = _a.editable,\n        inputRef = _a.inputRef,\n        validator = _a.validator,\n        update = _a.update,\n        readOnly = _a.readOnly,\n        removeOnBackspace = _a.removeOnBackspace;\n    var tagRemoveClass = !readOnly ? classSelectors.tagRemove : classSelectors.tagRemove + \" \" + classSelectors.tagRemoveReadOnly;\n    return React.createElement(\"div\", {\n      className: classSelectors.tag\n    }, !editable && React.createElement(\"div\", {\n      className: classSelectors.tagContent\n    }, value), editable && React.createElement(ContentEditable, {\n      value: value,\n      inputRef: inputRef,\n      innerEditableRef: this.innerEditableRef,\n      className: classSelectors.tagContent,\n      change: function (newValue) {\n        return update(index, newValue);\n      },\n      remove: this.remove,\n      validator: validator,\n      removeOnBackspace: removeOnBackspace\n    }), React.createElement(\"div\", {\n      className: tagRemoveClass,\n      onClick: this.remove\n    }));\n  };\n\n  return Tag;\n}(React.Component);\n\nexport { Tag };","map":{"version":3,"sources":["../../../src/components/Tag.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAQ,cAAR,QAA6B,oBAA7B;AACA,SAAQ,eAAR,QAA8B,mBAA9B;;AAcA,IAAA,GAAA,GAAA,UAAA,MAAA,EAAA;AAAyB,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AAAzB,WAAA,GAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAEE,IAAA,KAAA,CAAA,gBAAA,GAAoD,KAAK,CAAC,SAAN,EAApD;;AAEA,IAAA,KAAA,CAAA,MAAA,GAAS,YAAA;AAAM,aAAA,KAAI,CAAC,KAAL,CAAW,MAAX,CAAkB,KAAI,CAAC,KAAL,CAAlB,KAAA,CAAA;AAAmC,KAAlD;;;AA8BD;;AA5BC,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AAEQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,KAAA,GAAA,EAAA,CAAA,KAAF;AAAA,QAAS,KAAA,GAAA,EAAA,CAAA,KAAT;AAAA,QAAgB,QAAA,GAAA,EAAA,CAAA,QAAhB;AAAA,QAA0B,QAAA,GAAA,EAAA,CAAA,QAA1B;AAAA,QAAoC,SAAA,GAAA,EAAA,CAAA,SAApC;AAAA,QAA+C,MAAA,GAAA,EAAA,CAAA,MAA/C;AAAA,QAAuD,QAAA,GAAA,EAAA,CAAA,QAAvD;AAAA,QAAiE,iBAAA,GAAA,EAAA,CAAA,iBAAjE;AAEN,QAAM,cAAc,GAAG,CAAC,QAAD,GACrB,cAAc,CAAC,SADM,GACS,cAAc,CAAC,SAAf,GAAwB,GAAxB,GAA4B,cAAc,CAAC,iBAD3E;AAGA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,cAAc,CAAC;AAA/B,KAAA,EACG,CAAC,QAAD,IAAa,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,cAAc,CAAC;AAA/B,KAAA,EAA4C,KAA5C,CADhB,EAEG,QAAQ,IACP,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AACd,MAAA,KAAK,EAAE,KADO;AAEd,MAAA,QAAQ,EAAE,QAFI;AAGd,MAAA,gBAAgB,EAAE,KAAK,gBAHT;AAId,MAAA,SAAS,EAAE,cAAc,CAAC,UAJZ;AAKd,MAAA,MAAM,EAAE,UAAC,QAAD,EAAS;AAAK,eAAA,MAAM,CAAC,KAAD,EAAN,QAAM,CAAN;AAAuB,OAL/B;AAMd,MAAA,MAAM,EAAE,KAAK,MANC;AAOd,MAAA,SAAS,EAAE,SAPG;AAQd,MAAA,iBAAiB,EAAE;AARL,KAAhB,CAHJ,EAcE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAgC,MAAA,OAAO,EAAE,KAAK;AAA9C,KAAA,CAdF,CADF;AAmBD,GA1BD;;AA4BF,SAAA,GAAA;AAAC,CAlCD,CAAyB,KAAK,CAAC,SAA/B,CAAA","sourcesContent":["import React from \"react\";\nimport {classSelectors} from \"../utils/selectors\";\nimport {ContentEditable} from \"./ContentEditable\";\n\ninterface Props {\n  value: string;\n  index: number;\n  editable: boolean;\n  readOnly: boolean;\n  inputRef: React.RefObject<HTMLInputElement>;\n  update: (i: number, value: string) => void;\n  remove: (i: number) => void;\n  validator?: (val: string) => boolean;\n  removeOnBackspace?: boolean;\n}\n\nexport class Tag extends React.Component<Props> {\n\n  innerEditableRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  remove = () => this.props.remove(this.props.index);\n\n  render() {\n\n    const { value, index, editable, inputRef, validator, update, readOnly, removeOnBackspace } = this.props;\n\n    const tagRemoveClass = !readOnly ?\n      classSelectors.tagRemove : `${classSelectors.tagRemove} ${classSelectors.tagRemoveReadOnly}`;\n\n    return (\n      <div className={classSelectors.tag}>\n        {!editable && <div className={classSelectors.tagContent}>{value}</div>}\n        {editable && (\n          <ContentEditable\n            value={value}\n            inputRef={inputRef}\n            innerEditableRef={this.innerEditableRef}\n            className={classSelectors.tagContent}\n            change={(newValue) => update(index, newValue)}\n            remove={this.remove}\n            validator={validator}\n            removeOnBackspace={removeOnBackspace}\n          />\n        )}\n        <div className={tagRemoveClass} onClick={this.remove}/>\n      </div>\n    );\n\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}