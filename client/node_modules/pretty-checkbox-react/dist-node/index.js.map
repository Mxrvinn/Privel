{"version":3,"file":"index.js","sources":["../dist-src/components/checkbox/useCheckboxState.js","../dist-src/hooks/utility/useLocked.js","../dist-src/hooks/useIcon.js","../dist-src/hooks/utility/useClassNames.js","../dist-src/hooks/utility/useControlled.js","../dist-src/hooks/useUUID.js","../dist-src/hooks/utility/useCommonProps.js","../dist-src/hooks/utility/useCheckboxRadioProps.js","../dist-src/components/state/State.js","../dist-src/components/checkbox/useIndeterminate.js","../dist-src/components/checkbox/Checkbox.js","../dist-src/components/radio/useRadioState.js","../dist-src/components/radio/Radio.js","../dist-src/components/switch/useAriaChecked.js","../dist-src/components/switch/Switch.js"],"sourcesContent":["import * as React from 'react';\nconst INDETERMINATE_STATE = 'indeterminate';\nconst dispatch = (value) => (state) => {\n    if (Array.isArray(state)) {\n        const index = state.indexOf(value);\n        if (index === -1) {\n            state.push(value);\n        }\n        else {\n            state.splice(index, 1);\n        }\n        return [...state];\n    }\n    else if (value !== '') {\n        return [value];\n    }\n    return !state;\n};\nexport const useCheckboxState = ({ state: initialState = false, onChange, } = {}) => {\n    const [state, setState] = React.useState(() => {\n        if (typeof initialState === 'string' && initialState !== INDETERMINATE_STATE) {\n            return [initialState];\n        }\n        return initialState;\n    });\n    return {\n        state,\n        setState,\n        onChange: React.useCallback((e) => {\n            const { value } = e.currentTarget;\n            setState(dispatch(value));\n            if (typeof onChange === 'function') {\n                onChange(e);\n            }\n        }, [onChange]),\n    };\n};\n","const lockedStyles = { pointerEvents: 'none' };\n/**\n * A simplier way to prevent checking when PCR is in locked mode.\n * This is way simplier than controlling the checkbox using\n * event handlers. Supports IE 11+\n */\nexport const useLocked = ({ locked, style }) => {\n    if (locked) {\n        return {\n            ...lockedStyles,\n            ...style,\n        };\n    }\n    return style;\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nexport const useIcon = (icon) => {\n    return React.useMemo(() => {\n        if (icon) {\n            let type = 'icon';\n            if (icon.type === 'img') {\n                type = 'image';\n            }\n            else if (icon.type === 'svg') {\n                type = 'svg';\n            }\n            // icons that contain `type` substring\n            // won't fail with a word boundary search\n            const re = new RegExp(`\\\\b${type}\\\\b`);\n            return {\n                iconType: icon.props['data-type'] || type,\n                icon: icon.props.className && !re.test(icon.props.className)\n                    ? React.cloneElement(icon, {\n                        ...icon.props,\n                        className: classNames(icon.props.className, type),\n                    })\n                    : icon,\n            };\n        }\n        return {};\n    }, [icon]);\n};\n","const isDefault = (animation, type) => {\n    if (type) {\n        return false;\n    }\n    return !animation || animation === 'smooth' || animation === 'pulse';\n};\n/**\n * Responsible for returning an object used by classnames\n * to properly add the className values to the .pretty element.\n */\nexport const useClassNames = (props, isSwitch) => {\n    const { animation, bigger, locked, plain, shape, variant, iconType, hasFocus } = props;\n    return {\n        'p-default': !isSwitch && isDefault(animation, iconType),\n        'p-bigger': bigger,\n        'p-locked': locked,\n        'p-plain': plain,\n        'p-has-focus': hasFocus,\n        [`p-${animation}`]: animation,\n        [`p-${shape}`]: shape,\n        [`p-${variant}`]: variant,\n        [`p-${iconType}`]: iconType,\n    };\n};\n","const isBoolean = (e) => typeof e === 'boolean';\nconst isNullish = (e) => e === null || e === undefined;\nconst isIndeterminate = (e) => e === 'indeterminate';\n/**\n * A generic way to setup controlled components by\n * removing  state hook return results, setting `checked`,\n * and `value` props too.\n */\nexport const useControlled = (props) => {\n    // remove state and state dispatch from the props\n    // eslint-disable-next-line prefer-const\n    let { checked, state, setState, value, defaultValue, ...rest } = props;\n    // if a dispatcher is used, then we're good to run the rest\n    // of the logic\n    if (setState) {\n        // if state is defined and checked is NOT defined\n        // then use state to set the value of checked.\n        if ((isBoolean(state) || isIndeterminate(state)) &&\n            !isBoolean(checked) &&\n            isNullish(checked)) {\n            checked = !!state;\n        }\n        else if (Array.isArray(state)) {\n            // otherwise set checked true if the value is contained\n            // within the state.\n            checked = state.includes(value);\n        }\n        else if (isNullish(checked)) {\n            // The type is not a boolean and is probably a string.\n            // If you're attempting to use this hook in a different\n            // way, then you should considering controlling the component\n            // yourself. Object.is used here just in case ;)\n            checked = Object.is(state, value);\n        }\n        // preset the value prop in controlled mode to an empty\n        // string to prevent 'on' values. Use the defaultValue\n        // if provided\n        if (isNullish(value)) {\n            value = defaultValue || '';\n        }\n    }\n    return { checked, value, state, ...rest };\n};\n","import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nconst PREFIX = 'pcr_';\nexport const useUUID = () => React.useRef(PREFIX + nanoid(8)).current;\n","import { useUUID } from '../useUUID';\n/**\n * Filters out the noise of prop mayhem with PCR. This separates\n * all props from the native HTML props that will eventually get passed\n * to the input element. Generated PCR UUIDs are created here, unless\n * user has specified one of their own.\n */\nexport const useCommonProps = (props) => {\n    const defaultId = useUUID();\n    const { locked, color, variant, animation, children, style, id = defaultId, className, bigger, hasFocus, ...rest } = props;\n    return {\n        locked,\n        color,\n        variant,\n        animation,\n        children,\n        id,\n        className,\n        bigger,\n        style,\n        hasFocus,\n        htmlProps: rest,\n    };\n};\n","import { useCommonProps } from './useCommonProps';\n/**\n * Responsible for extracting common props for radio and checkbox\n * controls.\n */\nexport const useCheckboxRadioProps = (props) => {\n    const { shape, plain, icon, indeterminate, hasFocus, ...rest } = props;\n    return { shape, plain, icon, indeterminate, ...useCommonProps(rest) };\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\n/**\n * A tiny component to abstract away pretty-checkbox \"state\" div.\n * Shared by all components.\n */\nexport const State = ({ color, icon, id, children, ...rest }) => {\n    return (React.createElement(\"div\", Object.assign({ className: classNames('state', color && `p-${color}`) }, rest),\n        icon,\n        React.createElement(\"label\", { htmlFor: id }, children)));\n};\nState.displayName = 'State';\n","import * as React from 'react';\nexport const useIndeterminate = ({ checked, state, indeterminate: indeterminateFromProps, }) => {\n    const [indeterminate, setStatus] = React.useState(false);\n    const ref = React.useRef(null);\n    React.useEffect(() => {\n        if (state !== undefined && ref.current) {\n            setStatus(state === 'indeterminate');\n        }\n    }, [state]);\n    // if a prop is passed mark the indeterminate state\n    // we should check to ensure state isn't set to indeterminate\n    // since we don't want ot clobber the state value if\n    // it is defined.\n    React.useEffect(() => {\n        if (state !== 'indeterminate' &&\n            ref.current &&\n            typeof indeterminateFromProps !== 'undefined') {\n            ref.current.checked = indeterminateFromProps;\n            // fix needs to come from pretty-checkbox\n            // ref.current.indeterminate = indeterminateFromProps;\n            setStatus(indeterminateFromProps);\n        }\n    }, [indeterminateFromProps, state]);\n    return {\n        ref,\n        'aria-checked': indeterminate ? 'mixed' : checked,\n    };\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport mergeRefs from 'react-merge-refs';\nimport { useCheckboxState } from './useCheckboxState';\nimport { useLocked } from '../../hooks/utility/useLocked';\nimport { useIcon } from '../../hooks/useIcon';\nimport { useClassNames } from '../../hooks/utility/useClassNames';\nimport { useControlled } from '../../hooks/utility/useControlled';\nimport { useCheckboxRadioProps } from '../../hooks/utility/useCheckboxRadioProps';\nimport { State } from '../state/State';\nimport { useIndeterminate } from './useIndeterminate';\nexport const Checkbox = React.forwardRef((props, ref) => {\n    const { checked, value, state, ...rest } = useControlled(props);\n    const { children, locked, color, id, className, style, indeterminate, icon: propsIcon, htmlProps, } = useCheckboxRadioProps(rest);\n    const { ref: intRef, ...aria } = useIndeterminate({ state, checked, indeterminate });\n    const styles = useLocked({ locked, style });\n    const { icon, iconType } = useIcon(propsIcon);\n    return (React.createElement(\"div\", { style: styles, className: classNames('pretty', useClassNames({\n            ...props,\n            iconType,\n        }), className) },\n        React.createElement(\"input\", Object.assign({ ref: mergeRefs([ref, intRef]), value: value, type: \"checkbox\", id: id, checked: checked }, aria, htmlProps)),\n        React.createElement(State, { id: id, icon: icon, color: color }, children)));\n});\nCheckbox.displayName = 'Checkbox';\nexport { useCheckboxState };\n","import * as React from 'react';\nexport const useRadioState = ({ state: initialState = false, onChange } = {}) => {\n    const [state, setState] = React.useState(initialState);\n    return {\n        state,\n        setState,\n        onChange: React.useCallback((e) => {\n            const { value } = e.currentTarget;\n            setState(current => {\n                if (value !== '') {\n                    return value;\n                }\n                return !current;\n            });\n            if (typeof onChange === 'function') {\n                onChange(e);\n            }\n        }, [onChange]),\n    };\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { State } from '../state/State';\nimport { useLocked } from '../../hooks/utility/useLocked';\nimport { useIcon } from '../../hooks/useIcon';\nimport { useClassNames } from '../../hooks/utility/useClassNames';\nimport { useControlled } from '../../hooks/utility/useControlled';\nimport { useCheckboxRadioProps } from '../../hooks/utility/useCheckboxRadioProps';\nimport { useRadioState } from './useRadioState';\nexport const Radio = React.forwardRef((props, ref) => {\n    const { checked, value, state, ...rest } = useControlled(props);\n    const { shape = 'round', children, locked, color, id, className, style, icon: propsIcon, htmlProps, } = useCheckboxRadioProps(rest);\n    const styles = useLocked({ locked, style });\n    const { icon, iconType } = useIcon(propsIcon);\n    return (React.createElement(\"div\", { style: styles, className: classNames('pretty', useClassNames({\n            ...props,\n            shape,\n            iconType,\n        }), className) },\n        React.createElement(\"input\", Object.assign({ ref: ref, value: value, type: \"radio\", id: id, checked: checked }, htmlProps)),\n        React.createElement(State, { id: id, icon: icon, color: color }, children)));\n});\nRadio.displayName = 'Radio';\nexport { useRadioState };\n","import * as React from 'react';\nconst handler = (e) => {\n    e.currentTarget.setAttribute('aria-checked', e.currentTarget.checked + '');\n};\n/**\n * A small hook to help manage correct aria-checked state when switch\n * is used as an uncontrolled component. We need this to run\n * for a11y purposes. FOr the `switch` role, `aria-checked` is required.\n */\nexport const useAriaChecked = ({ setState, checked }) => {\n    const ref = React.useRef(null);\n    React.useEffect(() => {\n        const elem = ref.current;\n        let bound = false;\n        if (!setState && !checked && elem) {\n            elem.setAttribute('aria-checked', elem.checked + '');\n            elem.addEventListener('change', handler);\n            bound = true;\n        }\n        return () => {\n            if (bound && elem) {\n                elem.removeEventListener('change', handler);\n            }\n        };\n    }, [setState, checked]);\n    return ref;\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useClassNames } from '../../hooks/utility/useClassNames';\nimport { useControlled } from '../../hooks/utility/useControlled';\nimport { useLocked } from '../../hooks/utility/useLocked';\nimport { State } from '../state/State';\nimport { useCommonProps } from '../../hooks/utility/useCommonProps';\nimport mergeRefs from 'react-merge-refs';\nimport { useAriaChecked } from './useAriaChecked';\nexport const Switch = React.forwardRef((props, ref) => {\n    const { checked, value, state, ...rest } = useControlled(props);\n    const { children, locked, color, id, className, style, htmlProps } = useCommonProps(rest);\n    const styles = useLocked({ locked, style });\n    const htmlRef = useAriaChecked({ setState: props.setState, checked });\n    return (React.createElement(\"div\", { style: styles, className: classNames('pretty', 'p-switch', useClassNames(props, true), className) },\n        React.createElement(\"input\", Object.assign({ ref: mergeRefs([ref, htmlRef]), type: \"checkbox\", role: \"switch\", value: value, id: id, \"aria-checked\": checked, checked: checked }, htmlProps)),\n        React.createElement(State, { id: id, color: color }, children)));\n});\nSwitch.displayName = 'Switch';\n"],"names":["INDETERMINATE_STATE","dispatch","value","state","Array","isArray","index","indexOf","push","splice","useCheckboxState","initialState","onChange","setState","React","e","currentTarget","lockedStyles","pointerEvents","useLocked","locked","style","useIcon","icon","type","re","RegExp","iconType","props","className","test","classNames","isDefault","animation","useClassNames","isSwitch","bigger","plain","shape","variant","hasFocus","isBoolean","isNullish","undefined","isIndeterminate","useControlled","checked","defaultValue","rest","includes","Object","is","PREFIX","useUUID","nanoid","current","useCommonProps","defaultId","color","children","id","htmlProps","useCheckboxRadioProps","indeterminate","State","assign","htmlFor","displayName","useIndeterminate","indeterminateFromProps","setStatus","ref","Checkbox","propsIcon","intRef","aria","styles","mergeRefs","useRadioState","Radio","handler","setAttribute","useAriaChecked","elem","bound","addEventListener","removeEventListener","Switch","htmlRef","role"],"mappings":"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"}